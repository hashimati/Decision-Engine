plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.5.3"
}

version = "0.1"
group = "io.hashimati"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-document-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    compileOnly("org.projectlombok:lombok")
    implementation("com.graphql-java-kickstart:graphql-java-tools:13.0.0")
    implementation("io.micronaut.data:micronaut-data-mongodb")
    implementation("io.micronaut.graphql:micronaut-graphql")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.mongodb:micronaut-mongo-sync")
//    implementation("io.micronaut.nats:micronaut-nats")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.tracing:micronaut-tracing-jaeger")
    implementation("io.micronaut:micronaut-management")
    implementation("io.swagger.core.v3:swagger-annotations")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mongodb")
    testImplementation("org.testcontainers:testcontainers")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation 'org.springframework:spring-expression:5.3.22'
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-validation")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")

}


application {
    mainClass.set("io.hashimati.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.hashimati.*")
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}